<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Classes - AttendPro</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 20px;
            background-color: #f8f9fa;
            overflow-x: hidden;
            position: relative;
        }

        /* Enhanced Animated Background */
        .animated-background {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 25%, #ff6b6b 50%, #4ecdc4 75%, #45b7d1 100%);
            background-size: 400% 400%;
            animation: gradientBG 15s ease infinite;
        }
        
        @keyframes gradientBG {
            0% {
                background-position: 0% 50%;
            }
            25% {
                background-position: 100% 0%;
            }
            50% {
                background-position: 100% 100%;
            }
            75% {
                background-position: 0% 100%;
            }
            100% {
                background-position: 0% 50%;
            }
        }

        /* Floating geometric shapes */
        .floating-shape {
            position: absolute;
            opacity: 0.1;
            animation: float 6s ease-in-out infinite;
            pointer-events: none;
        }

        .shape-1 {
            width: 80px;
            height: 80px;
            background: linear-gradient(45deg, #ff6b6b, #ee5a24);
            border-radius: 50%;
            top: 20%;
            left: 10%;
            animation-delay: 0s;
        }

        .shape-2 {
            width: 120px;
            height: 120px;
            background: linear-gradient(45deg, #4834d4, #686de0);
            border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
            top: 60%;
            right: 15%;
            animation-delay: -2s;
        }

        .shape-3 {
            width: 60px;
            height: 60px;
            background: linear-gradient(45deg, #00d2d3, #54a0ff);
            border-radius: 20px;
            top: 40%;
            left: 80%;
            animation-delay: -4s;
            transform: rotate(45deg);
        }

        @keyframes float {
            0%, 100% { 
                transform: translateY(0px) rotate(0deg); 
            }
            50% { 
                transform: translateY(-30px) rotate(180deg); 
            }
        }

        /* Enhanced floating bubbles */
        .floating-bubble {
            position: absolute;
            background: rgba(255, 255, 255, 0.15);
            border-radius: 50%;
            pointer-events: none;
            animation: floatBubble 6s ease-in-out infinite;
            backdrop-filter: blur(5px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        @keyframes floatBubble {
            0%, 100% {
                transform: translateY(0) scale(1);
                opacity: 0.7;
            }
            50% {
                transform: translateY(-40px) scale(1.1);
                opacity: 1;
            }
        }

        h1 {
            margin-bottom: 40px;
            color: #fff;
            font-size: 3rem;
            font-weight: 700;
            text-align: center;
            text-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
            animation: fadeInDown 1s ease-out;
        }

        @keyframes fadeInDown {
            from {
                opacity: 0;
                transform: translateY(-30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .card-container {
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
            margin-bottom: 50px;
            justify-content: center;
        }

        .card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 30px;
            width: 350px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            cursor: pointer;
            position: relative;
            overflow: hidden;
            animation: fadeInUp 0.8s ease-out;
        }

        .card:before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
            transition: left 0.5s;
        }

        .card:hover:before {
            left: 100%;
        }

        .card:hover {
            transform: translateY(-15px) scale(1.02);
            box-shadow: 0 30px 60px rgba(0, 0, 0, 0.2);
            border-color: rgba(102, 126, 234, 0.5);
        }

        .card:nth-child(1) { animation-delay: 0.1s; }
        .card:nth-child(2) { animation-delay: 0.2s; }
        .card:nth-child(3) { animation-delay: 0.3s; }
        .card:nth-child(4) { animation-delay: 0.4s; }
        .card:nth-child(5) { animation-delay: 0.5s; }
        .card:nth-child(6) { animation-delay: 0.6s; }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .card-icon {
            width: 60px;
            height: 60px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 20px;
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
            animation: pulse 2s infinite;
        }

        .card-icon::after {
            content: 'üìö';
            font-size: 1.5rem;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        .card-title {
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 15px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .card-text {
            margin-bottom: 25px;
            color: #718096;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .card-text::before {
            content: 'üìç';
            font-size: 1rem;
        }

        .btn {
            display: inline-block;
            padding: 12px 24px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: #fff;
            text-decoration: none;
            border-radius: 12px;
            cursor: pointer;
            text-align: center;
            font-weight: 600;
            border: none;
            width: 100%;
            font-size: 1rem;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);
        }

        .btn:active {
            transform: translateY(0);
        }

        /* View Button Styling */
        .view-btn {
            background: linear-gradient(135deg, #4CAF50, #45B649);
            margin-bottom: 10px;
        }

        .view-btn:hover {
            background: linear-gradient(135deg, #45B649, #4CAF50);
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(76, 175, 80, 0.4);
        }

        /* Delete Button Styling */
        .delete-btn {
            background: linear-gradient(135deg, #FF416C, #FF4B2B);
        }

        .delete-btn:hover {
            background: linear-gradient(135deg, #FF4B2B, #FF416C);
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(255, 65, 108, 0.4);
        }

        .create-btn {
            margin-top: 30px;
            background: linear-gradient(135deg, #ff6b6b, #ee5a24);
            padding: 15px 40px;
            font-size: 1.2rem;
            font-weight: 700;
            border-radius: 15px;
            box-shadow: 0 15px 35px rgba(255, 107, 107, 0.4);
            display: block;
            text-align: center;
            max-width: 300px;
            margin: 50px auto 0;
            animation: fadeInUp 1s ease-out 0.5s both;
        }

        .create-btn:hover {
            background: linear-gradient(135deg, #ee5a24, #ff6b6b);
            transform: translateY(-5px) scale(1.05);
            box-shadow: 0 25px 50px rgba(255, 107, 107, 0.5);
        }

        .create-btn:before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
            transition: left 0.5s;
        }

        .create-btn:hover:before {
            left: 100%;
        }

        /* Ripple effect */
        .ripple {
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.6);
            transform: scale(0);
            animation: ripple-animation 0.6s linear;
            pointer-events: none;
        }

        @keyframes ripple-animation {
            to {
                transform: scale(4);
                opacity: 0;
            }
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            body {
                margin: 10px;
            }
            
            h1 {
                font-size: 2rem;
                margin-bottom: 30px;
            }
            
            .card-container {
                gap: 20px;
            }
            
            .card {
                width: 100%;
                max-width: 400px;
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <!-- Enhanced Animated Background -->
    <%- include('partials/navbar') %>
    
    <div class="animated-background"></div>
    
    <!-- Floating Shapes -->
    <div class="floating-shape shape-1"></div>
    <div class="floating-shape shape-2"></div>
    <div class="floating-shape shape-3"></div>

    <h1>üìö My Classes</h1>

    <div class="card-container">
        <% classlist.forEach(classitem => { %>
            <div class="card">
                <div class="card-icon"></div>
                <div class="card-title"><%= classitem.CLASSNAME %></div>
                <div class="card-text">Subject: <%= classitem.SUBJECT %></div>
                <div class="card-text">Room Number: <%= classitem.ROOMNO %></div>
                
                <a href="/classdetail/<%= classitem._id %>" class="btn view-btn">View Details</a>
                <form action="/deleteclass" method="POST">
                    <input type="hidden" name="classId" value="<%= classitem._id %>">
                     <button type="submit" class="btn delete-btn">Delete Class</button>
                </form>
            </div>
        <% }) %>
    </div>

    <div>
        <a href="/createclass" class="btn create-btn">CREATE A NEW CLASS</a>
    </div>

    <script>
        // Enhanced bubble creation
        function createBubble() {
            const bubble = document.createElement('div');
            bubble.className = 'floating-bubble';
            bubble.style.left = Math.random() * 100 + 'vw';
            bubble.style.top = Math.random() * 100 + 'vh';
            const size = Math.random() * 60 + 30;
            bubble.style.width = size + 'px';
            bubble.style.height = size + 'px';
            bubble.style.animationDuration = (Math.random() * 3 + 4) + 's';
            document.body.appendChild(bubble);
            
            setTimeout(() => {
                bubble.remove();
            }, 6000);
        }

        setInterval(createBubble, 400);

        // Enhanced mouse interaction
        document.addEventListener('mousemove', (e) => {
            const x = e.clientX / window.innerWidth;
            const y = e.clientY / window.innerHeight;
            
            document.querySelector('.animated-background').style.backgroundPosition = 
                `${x * 100}% ${y * 100}%`;
        });

        // Add ripple effect to buttons
        document.addEventListener('DOMContentLoaded', function() {
            const buttons = document.querySelectorAll('.btn');
            
            buttons.forEach(button => {
                button.addEventListener('click', function(e) {
                    const ripple = document.createElement('span');
                    const rect = this.getBoundingClientRect();
                    const size = Math.max(rect.width, rect.height);
                    const x = e.clientX - rect.left - size / 2;
                    const y = e.clientY - rect.top - size / 2;
                    
                    ripple.style.width = ripple.style.height = size + 'px';
                    ripple.style.left = x + 'px';
                    ripple.style.top = y + 'px';
                    ripple.classList.add('ripple');
                    
                    this.appendChild(ripple);
                    
                    setTimeout(() => {
                        ripple.remove();
                    }, 600);
                });
            });

            // Add staggered animation to cards
            const cards = document.querySelectorAll('.card');
            cards.forEach((card, index) => {
                card.style.animationDelay = `${index * 0.1}s`;
            });
        });

        // Add parallax effect to floating shapes
        document.addEventListener('mousemove', (e) => {
            const shapes = document.querySelectorAll('.floating-shape');
            const x = e.clientX / window.innerWidth;
            const y = e.clientY / window.innerHeight;
            
            shapes.forEach((shape, index) => {
                const speed = (index + 1) * 0.5;
                shape.style.transform += ` translate(${x * speed}px, ${y * speed}px)`;
            });
        });
    </script>
</body>
</html>